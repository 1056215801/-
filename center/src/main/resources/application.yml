spring:
  profiles:
    #    active: @spring.active@
    active: dev

---

spring:
  profiles: dev
  application:
    name: center
server:
  #启动端口
  port: 8761

eureka:
  client:
    #false:不作为一个客户端注册到注册中心
    #registerWithEureka: false
    #为true时，可以启动，但报异常：Cannot execute request on any known server
    #fetchRegistry: false
    preferIpAddress: true
#    serviceUrl:
#      #            defaultZone: http://localhost:8761/eureka/
#      # docker 部署开启
#      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8762}/eureka/
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
    # docker 部署开启
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id:  ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    hostname: eureka1

---

spring:
  profiles: dev2
  application:
    name: center
server:
  #启动端口
  port: 8762

eureka:
  client:
    #false:不作为一个客户端注册到注册中心
    #registerWithEureka: false
    #为true时，可以启动，但报异常：Cannot execute request on any known server
    #fetchRegistry: false
    preferIpAddress: true
    serviceUrl:
      #            defaultZone: http://localhost:8761/eureka/
      # docker 部署开启
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
    # docker 部署开启
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id:  ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    hostname: eureka2

