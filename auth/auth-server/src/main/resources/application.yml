spring:
  application:
    name: auth
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
  redis:
    database: 2
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    pool:
    max-active: 20
  datasource:
    druid:
      name: test
      url: jdbc:mysql://192.168.1.222:3306/ag_auth_v1?useUnicode=true&characterEncoding=UTF8&useSSL=false
      username: root
      password: 123456
      # 使用druid数据源
      # type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
  #    rabbitmq:
  #      host: localhost
  #      port:  5672
  #      username: guest
  #      password: guest
  sleuth:
    enabled: true
    http:
      legacy:
        enabled: true

mybatis:
  basepackage: com.mit.auth.mapper
  xmlLocation: classpath:mapper/**/*.xml
  mapper-locations: "classpath*:mapper/*.xml"

server:
  port: 9777 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      ## 并发执行的最大线程数，默认10
      ## 每秒500个请求，每个请求0.8秒，500 * （0,8 + 0.2）
      coreSize: 500
      ## BlockingQueue的最大队列数
      maxQueueSize: 1000
      ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      queueSizeRejectionThreshold: 500
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

eureka:
  instance:
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
    # docker 部署开启
    prefer-ip-address: true
    ip-address: 192.168.1.222
    instance-id:  ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    hostname: ${spring.cloud.client.hostname}
  client:
    serviceUrl:
      #            defaultZone: http://localhost:8761/eureka/
      # docker 部署开启
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/



jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: ace-auth
  secret: 123456
  token-header: x-client-token
  expire: 14400
  rsa-secret: x2318^^(*WRYQWR(QW&T

logging:
  level:
    #        tk.mybatis: DEBUG
    com.mit.auth: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: '*'
      security:
        enabled: false
